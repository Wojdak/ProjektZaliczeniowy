// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt_zaliczeniowy.Models;

#nullable disable

namespace Projektzaliczeniowy.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230121140353_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchTeam", b =>
                {
                    b.Property<int>("MatchesId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("MatchesId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("MatchTeam");
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int>("GuestId")
                        .HasColumnType("int")
                        .HasColumnName("guest_team");

                    b.Property<int>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("host_team");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<int>("Tickets_amount")
                        .HasColumnType("int")
                        .HasColumnName("tickets");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 12, 26, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 4,
                            HostId = 2,
                            Price = 50,
                            Ticketsamount = 15
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 12, 28, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 1,
                            HostId = 3,
                            Price = 40,
                            Ticketsamount = 0
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 12, 31, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 3,
                            HostId = 4,
                            Price = 50,
                            Ticketsamount = 5
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 1, 2, 20, 45, 0, 0, DateTimeKind.Unspecified),
                            GuestId = 2,
                            HostId = 1,
                            Price = 45,
                            Ticketsamount = 2
                        });
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date_of_birth")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("position");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("surname");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dateofbirth = new DateTime(1997, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gabriel",
                            Nationality = "Brazilian",
                            Position = "Attacker",
                            Surname = "Jesus",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 2,
                            Dateofbirth = new DateTime(1998, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Martin",
                            Nationality = "Norwegian",
                            Position = "Midfielder",
                            Surname = "odegaard",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            Dateofbirth = new DateTime(1997, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kieran",
                            Nationality = "Scottish",
                            Position = "Defender",
                            Surname = "Tierney",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            Dateofbirth = new DateTime(2000, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Erling",
                            Nationality = "Norwegian",
                            Position = "Attacker",
                            Surname = "Haaland",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            Dateofbirth = new DateTime(1991, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kevin",
                            Nationality = "Belgian",
                            Position = "Midfielder",
                            Surname = "De Bruyne",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            Dateofbirth = new DateTime(1997, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ruben",
                            Nationality = "Portuguese",
                            Position = "Defender",
                            Surname = "Dias",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 7,
                            Dateofbirth = new DateTime(1992, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mohamed",
                            Nationality = "Egyptian",
                            Position = "Attacker",
                            Surname = "Salah",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 8,
                            Dateofbirth = new DateTime(2090, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jordan",
                            Nationality = "English",
                            Position = "Midfielder",
                            Surname = "Henderson",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 9,
                            Dateofbirth = new DateTime(1991, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Virgil",
                            Nationality = "Dutch",
                            Position = "Defender",
                            Surname = "van Dijk",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 10,
                            Dateofbirth = new DateTime(1999, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kai",
                            Nationality = "German",
                            Position = "Attacker",
                            Surname = "Havertz",
                            TeamId = 4
                        },
                        new
                        {
                            Id = 11,
                            Dateofbirth = new DateTime(1999, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mason",
                            Nationality = "English",
                            Position = "Midfielder",
                            Surname = "Mount",
                            TeamId = 4
                        },
                        new
                        {
                            Id = 12,
                            Dateofbirth = new DateTime(1984, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thiago",
                            Nationality = "Brazilian",
                            Position = "Defender",
                            Surname = "Silva",
                            TeamId = 4
                        });
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("country");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Stadium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stadium");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Manchester",
                            Country = "England",
                            Name = "Manchester City",
                            Stadium = "Etihad Stadium"
                        },
                        new
                        {
                            Id = 2,
                            City = "London",
                            Country = "England",
                            Name = "Arsenal",
                            Stadium = "Emirates Stadium"
                        },
                        new
                        {
                            Id = 3,
                            City = "Liverpool",
                            Country = "England",
                            Name = "Liverpool FC",
                            Stadium = "Anfield Stadium"
                        },
                        new
                        {
                            Id = 4,
                            City = "London",
                            Country = "England",
                            Name = "Chelsea",
                            Stadium = "Stamford Bridge Stadium"
                        });
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("howManyPeople")
                        .HasColumnType("int")
                        .HasColumnName("howManyPeople");

                    b.Property<int>("totalPrice")
                        .HasColumnType("int")
                        .HasColumnName("totalPrice");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("MatchTeam", b =>
                {
                    b.HasOne("Projekt_zaliczeniowy.Models.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt_zaliczeniowy.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Player", b =>
                {
                    b.HasOne("Projekt_zaliczeniowy.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Ticket", b =>
                {
                    b.HasOne("Projekt_zaliczeniowy.Models.Match", "Match")
                        .WithMany("Tickets")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Match", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Projekt_zaliczeniowy.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
